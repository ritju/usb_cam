[0.000000] (-) TimerEvent: {}
[0.000272] (usb_cam) JobQueued: {'identifier': 'usb_cam', 'dependencies': OrderedDict()}
[0.000774] (usb_cam) JobStarted: {'identifier': 'usb_cam'}
[0.012505] (usb_cam) JobProgress: {'identifier': 'usb_cam', 'progress': 'cmake'}
[0.012684] (usb_cam) Command: {'cmd': ['/usr/bin/cmake', '/src/usb_cam', '-DCMAKE_INSTALL_PREFIX=/src/usb_cam/install/usb_cam'], 'cwd': '/src/usb_cam/build/usb_cam', 'env': OrderedDict([('NV_LIBCUBLAS_VERSION', '11.11.3.6-1'), ('PANEL_BACK_CAMERA', '1'), ('NV_CUDA_COMPAT_PACKAGE', 'cuda-compat-11-8'), ('HOSTNAME', 'tj2022-Default-string'), ('PANEL_FRONT_CAMERA', '0'), ('FRONT_DEPTH_CAMERA', '0'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/capella/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('NV_LIBNCCL_PACKAGE_VERSION', '2.15.5-1'), ('AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS', '1'), ('HOME', '/root'), ('OLDPWD', '/src'), ('ROBOT_VERSION', 'exhibition'), ('PANEL_FRONT_CAMERA_FLIP', '0'), ('ROS_PYTHON_VERSION', '3'), ('NV_LIBNPP_PACKAGE', 'libnpp-11-8=11.8.0.86-1'), ('CUDA_VERSION', '11.8.0'), ('COLCON_PREFIX_PATH', '/capella:/opt/ros/humble'), ('ROS_DISTRO', 'humble'), ('CAPELLA_ROS_HEADLESS', 'True'), ('NV_LIBCUBLAS_PACKAGE_NAME', 'libcublas-11-8'), ('NVIDIA_REQUIRE_CUDA', 'cuda>=11.8 brand=tesla,driver>=470,driver<471 brand=unknown,driver>=470,driver<471 brand=nvidia,driver>=470,driver<471 brand=nvidiartx,driver>=470,driver<471 brand=geforce,driver>=470,driver<471 brand=geforcertx,driver>=470,driver<471 brand=quadro,driver>=470,driver<471 brand=quadrortx,driver>=470,driver<471 brand=titan,driver>=470,driver<471 brand=titanrtx,driver>=470,driver<471'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('NV_LIBCUSPARSE_VERSION', '11.7.5.86-1'), ('NVIDIA_DRIVER_CAPABILITIES', 'compute,video,graphics,utility'), ('NV_CUDA_LIB_VERSION', '11.8.0-1'), ('NV_LIBNCCL_PACKAGE_NAME', 'libnccl2'), ('TERM', 'xterm'), ('NV_CUDA_CUDART_VERSION', '11.8.89-1'), ('ROS_LOCALHOST_ONLY', '0'), ('QT_X11_NO_MITSHM', '1'), ('PATH', '/opt/ros/humble/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('NV_LIBCUBLAS_PACKAGE', 'libcublas-11-8=11.11.3.6-1'), ('NVARCH', 'x86_64'), ('PANEL_FRONT_CAMERA_ROTATION', '2'), ('XDG_RUNTIME_DIR', '/tmp/run'), ('DISPLAY', ''), ('NV_LIBNCCL_PACKAGE', 'libnccl2=2.15.5-1+cuda11.8'), ('IMAGE_VERSION', '1.0.9'), ('NVIDIA_PRODUCT_NAME', 'CUDA'), ('LANG', 'en_US.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/capella:/opt/ros/humble'), ('DEBIAN_FRONTEND', 'noninteractive'), ('USE_AD_VIEWER_COUNT', 'False'), ('NV_NVTX_VERSION', '11.8.86-1'), ('NV_LIBNPP_VERSION', '11.8.0.86-1'), ('PWD', '/src/usb_cam/build/usb_cam'), ('PYTHONPATH', '/capella/lib/python3.10/site-packages:/capella/local/lib/python3.10/dist-packages:/opt/ros/humble/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages'), ('NVIDIA_VISIBLE_DEVICES', 'all'), ('NCCL_VERSION', '2.15.5-1'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/capella:/opt/ros/humble')]), 'shell': False}
[0.099808] (-) TimerEvent: {}
[0.200163] (-) TimerEvent: {}
[0.253458] (usb_cam) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.300265] (-) TimerEvent: {}
[0.400830] (-) TimerEvent: {}
[0.410912] (usb_cam) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.420392] (usb_cam) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.501014] (-) TimerEvent: {}
[0.518053] (usb_cam) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.525861] (usb_cam) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.526627] (usb_cam) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.527623] (usb_cam) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.532517] (usb_cam) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.601172] (-) TimerEvent: {}
[0.630300] (usb_cam) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.640118] (usb_cam) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.640902] (usb_cam) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.641069] (usb_cam) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.649489] (usb_cam) StdoutLine: {'line': b'-- Found ament_cmake_auto: 1.3.9 (/opt/ros/humble/share/ament_cmake_auto/cmake)\n'}
[0.701392] (-) TimerEvent: {}
[0.802136] (-) TimerEvent: {}
[0.902653] (-) TimerEvent: {}
[1.003089] (-) TimerEvent: {}
[1.103631] (-) TimerEvent: {}
[1.110644] (usb_cam) StdoutLine: {'line': b'-- Found Python3: /usr/bin/python3 (found version "3.10.12") found components: Interpreter \n'}
[1.203754] (-) TimerEvent: {}
[1.304185] (-) TimerEvent: {}
[1.404086] (usb_cam) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[1.404384] (-) TimerEvent: {}
[1.412268] (usb_cam) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[1.425080] (usb_cam) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[1.452769] (usb_cam) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[1.478891] (usb_cam) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.504470] (-) TimerEvent: {}
[1.579463] (usb_cam) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[1.584232] (usb_cam) StdoutLine: {'line': b'-- Found rmw_cyclonedds_cpp: 1.3.4 (/opt/ros/humble/share/rmw_cyclonedds_cpp/cmake)\n'}
[1.604565] (-) TimerEvent: {}
[1.632628] (usb_cam) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_cyclonedds_cpp' as default\n"}
[1.650386] (usb_cam) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[1.704758] (-) TimerEvent: {}
[1.741612] (usb_cam) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[1.742421] (usb_cam) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.804883] (-) TimerEvent: {}
[1.828241] (usb_cam) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n'}
[1.829385] (usb_cam) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.904977] (-) TimerEvent: {}
[2.005316] (-) TimerEvent: {}
[2.105668] (-) TimerEvent: {}
[2.206183] (-) TimerEvent: {}
[2.306739] (-) TimerEvent: {}
[2.370976] (usb_cam) StderrLine: {'line': b'\x1b[31mCMake Error at CMakeLists.txt:16 (find_package):\n'}
[2.371293] (usb_cam) StderrLine: {'line': b'  By not providing "FindOpenCV.cmake" in CMAKE_MODULE_PATH this project has\n'}
[2.371383] (usb_cam) StderrLine: {'line': b'  asked CMake to find a package configuration file provided by "OpenCV", but\n'}
[2.371489] (usb_cam) StderrLine: {'line': b'  CMake did not find one.\n'}
[2.371571] (usb_cam) StderrLine: {'line': b'\n'}
[2.371646] (usb_cam) StderrLine: {'line': b'  Could not find a package configuration file provided by "OpenCV" with any\n'}
[2.371719] (usb_cam) StderrLine: {'line': b'  of the following names:\n'}
[2.371790] (usb_cam) StderrLine: {'line': b'\n'}
[2.371859] (usb_cam) StderrLine: {'line': b'    OpenCVConfig.cmake\n'}
[2.371929] (usb_cam) StderrLine: {'line': b'    opencv-config.cmake\n'}
[2.371999] (usb_cam) StderrLine: {'line': b'\n'}
[2.372069] (usb_cam) StderrLine: {'line': b'  Add the installation prefix of "OpenCV" to CMAKE_PREFIX_PATH or set\n'}
[2.372141] (usb_cam) StderrLine: {'line': b'  "OpenCV_DIR" to a directory containing one of the above files.  If "OpenCV"\n'}
[2.372210] (usb_cam) StderrLine: {'line': b'  provides a separate development package or SDK, be sure it has been\n'}
[2.372278] (usb_cam) StderrLine: {'line': b'  installed.\n'}
[2.372346] (usb_cam) StderrLine: {'line': b'\n'}
[2.372419] (usb_cam) StderrLine: {'line': b'\x1b[0m\n'}
[2.372497] (usb_cam) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[2.372581] (usb_cam) StdoutLine: {'line': b'See also "/src/usb_cam/build/usb_cam/CMakeFiles/CMakeOutput.log".\n'}
[2.383130] (usb_cam) CommandEnded: {'returncode': 1}
[2.406900] (-) TimerEvent: {}
[2.409544] (usb_cam) JobEnded: {'identifier': 'usb_cam', 'rc': 1}
[2.420376] (-) EventReactorShutdown: {}
